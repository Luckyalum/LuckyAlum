[{"title":"常见排序算法","date":"2017-03-12T16:00:00.000Z","path":"2017/03/13/2017-3-13-常见排序算法/","text":"常见排序算法 1.冒泡排序算法：重复经过未排序数组，每次比较两个相邻元素，如果它们值相反，就交换它们的值代码实现：123456789101112static void BubbleSort(int[] a, int n) &#123; for(int i=1; i&lt;n; i++) for(int j=0; j&lt;n-i;j++) if(a[j]&gt;a[j+1]) &#123; int tmp; tmp = a[j]; a[j] = a[j+1]; a[j+1] = tmp; &#125; &#125; 2.插入排序算法：每一步都将一个待排数据按其大小插入到已经排序的数据中的适当位置,直到全部插入完毕代码实现：1234567891011static void InsertSort(int[] a, int n) &#123; for(int i=0; i&lt;n; i++) &#123; int m = a[i]; int j; for(j=i; j&gt;0&amp;&amp;m&lt;a[j-1]; j--) a[j] = a[j-1]; a[j] = m; &#125; &#125; 3.选择排序算法：每一趟排序从序列中未排好序的那些元素中选择一个值最小的元素，然后将其与这些未排好序的元素的第一个元素交换位置代码实现： static void SelectSort(int[] a, int n) { for(int i=0; i&lt;n; i++) { int min = a[i]; int index = i; int tmp; for(int j=i+1; j&lt;n; j++) if(a[j]&lt;min) { min = a[j]; index = j; } tmp = a[i]; a[i] = min; a[index] = tmp; } } 4.快速排序算法：先从数列中取出一个数作为基准数，将比这个数大的数全放到它的右边，小于或等于它的数全放到它的左边，再对左右区间重复上述过程，直到各区间只有一个数代码实现： static void QuickSort(int[] a, int left, int right) { if(left&lt;right) { int i = left; int j = right; int m = a[i]; while(i&lt;j) { while(i&lt;j&amp;&amp;a[j]&gt;=m) j--; if(i&lt;j) a[i++] = a[j]; while(i&lt;j&amp;&amp;a[i]&lt;=m) i++; if(i&lt;j) a[j--] = a[i]; } a[i] = m; QuickSort(a, left, i-1); QuickSort(a, i+1, right); } } 最后","tags":[{"name":"算法","slug":"算法","permalink":"http://baoxizhao.com/tags/算法/"},{"name":"排序","slug":"排序","permalink":"http://baoxizhao.com/tags/排序/"}]},{"title":"python openCV图像处理之提取轮廓","date":"2017-03-12T16:00:00.000Z","path":"2017/03/13/python openCV图像处理之提取轮廓/","text":"1.导入需要的包1import cv2 这里只做最简单的处理，所以只需导入cv2 2.载入图片1img = cv2.imread('kindle.jpg') 3.图片处理因为后面的cv2.findContours函数要求传入的为二值图像，所以需要先对图片进行处理12gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY) #转换为灰度图像ret, binary = cv2.threshold(gray,127,255,cv2.THRESH_BINARY) #转换为二值图像 4.轮廓提取1_,contours, hierarchy = cv2.findContours(binary, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE) #提取轮廓 contours即为轮廓的像素集合（可能有多个轮廓，需要找到自己要提取的轮廓）具体参数可查doc.opencv.org 5.显示图像因为后面的cv2.findContours函数要求传入的为二值图像，所以需要先对图片进行处理 cv2.drawContours(img,contours,-1,(0,0,255),2)#图片，轮廓集合，第几个轮廓 ，画笔颜色，画笔宽度 cv2.imshow(\"img\", img) cv2.waitKey(0) 6.所有代码及结果#-*- coding=utf8 -*- import cv2 import numpy as np img = cv2.imread('kindle.jpg') gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY) #转换为灰度图像 ret, binary = cv2.threshold(gray,127,255,cv2.THRESH_BINARY) #转换为二值图像 _,contours, hierarchy = cv2.findContours(binary, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE) #提取轮廓 cv2.drawContours(img,contours,-1,(0,0,255),2) cv2.imshow(\"img\", img) cv2.waitKey(0)","tags":[{"name":"opencv","slug":"opencv","permalink":"http://baoxizhao.com/tags/opencv/"},{"name":"python","slug":"python","permalink":"http://baoxizhao.com/tags/python/"},{"name":"图像处理","slug":"图像处理","permalink":"http://baoxizhao.com/tags/图像处理/"}]},{"title":"Linux基础学习","date":"2017-02-04T16:00:00.000Z","path":"2017/02/05/2017-2-5-linux学习/","text":"Linux基础学习（第一部分 Linux的规则与安装）主要参考来源-鸟哥的Linux私房菜基础学习篇（第三版） 1.搭建环境由于一些原因（就是穷，买不起服务器），通过虚拟机来学习Linux，但是这种环境很多硬件都是仿真的，因此有条件的话建议还是直接装Linux或利用多重引导装双系统。 相关配置： 主机系统： Windows 7 64位 虚拟机软件 VMare Workstation 12.5.2 虚拟机系统 CentOS 7安装： 首先安装VMare，然后下载CentOS 7镜像文件，VMare安装CentOS也没什么要特别注意的地方。 2.登录系统 CentOS 7有图形界面X Window（GNOME,GNOME classical等）和命令行界面。 两种模式的切换：Ctrl+Alt+F2~F7 命令行界面（tty2~tty7）Ctrl+Alt+F1 图形界面（tty1）注意：不同的distribution不同，如CentOS 5.x tty7为图形界面 如果使用命令行模式启动的Linux，可以使用1$start x 不过该命令并非万能 终端界面登录Linuxlocalhost login: baoxzh password: Last login: Wed Feb 8 19:30:30 on:0 [baoxzh@localhost~]$ 注意输入的密码不会显示出来 3.基础命令 命令行模式下执行命令基本格式： command [-options] parameter1 parameter2…即 命令或可执行文件+选项+参数1+参数2+…注意：大小写区分 简单命令： 显示日期命令 date 显示日历命令 cal 不妨试试 $ cal 9 1752(和历法有关) 计算器 bc 基本命令： 改变目录 cd (change directory) 选择用户 su (switch user) 删除文件 rm (remove) 显示文件属性 ls 退出 exit 重要热键： Tab：命令补全或文件补齐 Ctrl+C：终止当前命令 Ctrl+D：离开，相当于exit 求助命令（Manual） man page 和 info page 关机、重启 shutdown reboot halt poweroff 切换执行等级 run level 0：关机 run level 3：纯命令行模式 run level 5：含有图形界面模式 run level 6：重启","tags":[{"name":"Linux","slug":"Linux","permalink":"http://baoxizhao.com/tags/Linux/"}]},{"title":"Hello World!","date":"2017-01-31T09:06:25.000Z","path":"2017/01/31/2017-01-31-hello-world/","text":"个人博客终于完成了！关于jekyll建立blog的教程有很多，这里只记下动手时遇到的几点注意事项：1.gem源由于gem源 ruby.taobao.org已不再维护，故要改为gems.ruby-china.org即 http://gems.ruby-china.org2.bundler错误1jekyll error bundler 需安装 bundler，即1$ gem install jekyll bundler 3.各种包错误问题安装别人主题时可能需要下载所需的包,例如：1Could not find minitest-5.8.3 in any of the sources 输入1$ gem install minitest -v 5.8.3 有时还会遇到后面版本不向前兼容（不熟悉ruby，不知道为啥），我采取的措施是卸载不需要的那个版本,例如1$ gem uninstall minitest -v 5.9.3 安装包可以通过gem命令，也可在rubygems.org上下载安装，举例下载了minitest.gem文件，cd到下载目录后1$ gem install --local minitest.gem 4.最后jekyll在windows下配置比较繁琐，因此后来使用了Hexo，点击教程。完成之后，更新博客只需在git bash 博客目录下输入：12$ hexo g $ hexo d","tags":[{"name":"jekyll","slug":"jekyll","permalink":"http://baoxizhao.com/tags/jekyll/"},{"name":"hexo","slug":"hexo","permalink":"http://baoxizhao.com/tags/hexo/"}]}]